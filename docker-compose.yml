services:
  disc-music:
    build: .
    container_name: disc-music-bot
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - TZ=UTC
      - DISCORD_TOKEN=${BOT_TOKEN}
      - DISCORD_CLIENT_ID=${APP_ID}
      - POSTGRES_HOST=disc-music-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    networks:
      - jamly-network
    env_file:
      - .env
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - logs_data:/app/logs
      - temp_data:/app/temp
      - cookies_data:/app/cookies
      - db_data:/app/data/db
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '1.0'
        reservations:
          memory: 2G
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    container_name: disc-music-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - jamly-network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: disc-music-ngrok
    restart: unless-stopped
    depends_on:
      - disc-music
    user: "1001:1001"
    ports:
      - "127.0.0.1:4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command: ["http", "disc-music:3000", "--log=stdout"]
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    networks:
      - jamly-network

volumes:
  postgres_data:
  logs_data:
  temp_data:
  cookies_data:
  db_data:

networks:
  jamly-network:
    driver: bridge