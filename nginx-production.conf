events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting zones
    limit_req_zone $remote_addr zone=discord_interactions:10m rate=10r/m;
    limit_req_zone $remote_addr zone=general:10m rate=60r/m;

    # Upstream to your Discord bot
    upstream discord_bot {
        server jamly-discord-bot-prod:3000;
        keepalive 32;
    }

    # HTTP server (redirects to HTTPS)
    server {
        listen 80;
        server_name bot.korbystrube.com;

        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name bot.korbystrube.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/live/bot.korbystrube.com/fullchain.pem;
        ssl_private_key /etc/nginx/ssl/live/bot.korbystrube.com/privkey.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS (optional but recommended)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Discord interactions endpoint
        location /interactions {
            # Rate limiting for Discord webhooks
            limit_req zone=discord_interactions burst=5 nodelay;

            # Proxy to your bot
            proxy_pass http://discord_bot/interactions;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            # Body size limit
            client_max_body_size 1M;
        }

        # Health check endpoint (optional)
        location /health {
            limit_req zone=general burst=10 nodelay;
            proxy_pass http://discord_bot/health;
            access_log off;
        }

        # API endpoints (for future expansion)
        location /api/ {
            limit_req zone=general burst=20 nodelay;
            proxy_pass http://discord_bot;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block everything else
        location / {
            return 404;
        }
    }

    # Logging
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;
}
